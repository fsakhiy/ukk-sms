#version: '3.8'
#services:
#  app:
#    image: nextjsapp:latest
#    environment:
#      - DATABASE_URL="postgres://postgres:postgres@db:5432/appdb?sslmode=disable"
#    depends_on:
#      - db
#    restart: unless-stopped
#    ports:
#      - '3000:3000'
#  db:
#    image: postgres:16.2-bullseye
#    restart: always
#    environment:
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=postgres
#    ports:
#      - '5432:5432'
#    volumes:
#      - db:/var/lib/postgresql/data
#      - ./db/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
#volumes:
#  db:
#
#

version: "3"

services:
  next-app:
    container_name: next-app
    build:
      context: ./
      dockerfile: ./Dockerfile
      args:
        ENV_VARIABLE: ${ENV_VARIABLE}
        NEXT_PUBLIC_ENV_VARIABLE: ${NEXT_PUBLIC_ENV_VARIABLE}
    restart: always
    ports:
      - 3000:3000
    networks:
      - my_network
    depends_on:
      - db

  # Add more containers below (nginx, postgres, etc.)
  db:
    image: postgres:bullseye
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql
      - ./db/init.sq:/docker-entrypoint-initdb.d/create_tables.sql
    networks:
      - my_network

# Define a network, which allows containers to communicate
# with each other, by using their container name as a hostname
networks:
  my_network:
    external: true

volumes:
  db: